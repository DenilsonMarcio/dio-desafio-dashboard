-- MySQL Script generated by MySQL Workbench
-- Wed Mar 19 12:23:14 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema dio_ecommerce
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `dio_ecommerce` ;

-- -----------------------------------------------------
-- Schema dio_ecommerce
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `dio_ecommerce` DEFAULT CHARACTER SET utf8 ;
USE `dio_ecommerce` ;

-- -----------------------------------------------------
-- Table `dio_ecommerce`.`PF_PJ`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dio_ecommerce`.`PF_PJ` ;

CREATE TABLE IF NOT EXISTS `dio_ecommerce`.`PF_PJ` (
  `id` INT NOT NULL,
  `tipo_cliente` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dio_ecommerce`.`Cliente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dio_ecommerce`.`Cliente` ;

CREATE TABLE IF NOT EXISTS `dio_ecommerce`.`Cliente` (
  `idCliente` INT NOT NULL,
  `nome` VARCHAR(45) NULL,
  `identificacao` VARCHAR(45) NULL,
  `endereco` VARCHAR(45) NULL,
  `PF_PJ_id` INT NOT NULL,
  PRIMARY KEY (`idCliente`, `PF_PJ_id`),
  CONSTRAINT `fk_Cliente_PF_PJ1`
    FOREIGN KEY (`PF_PJ_id`)
    REFERENCES `dio_ecommerce`.`PF_PJ` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Cliente_PF_PJ1_idx` ON `dio_ecommerce`.`Cliente` (`PF_PJ_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `dio_ecommerce`.`Produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dio_ecommerce`.`Produto` ;

CREATE TABLE IF NOT EXISTS `dio_ecommerce`.`Produto` (
  `idProduto` INT NOT NULL,
  `categoria` VARCHAR(45) NULL,
  `descricao` VARCHAR(45) NULL,
  `valor` VARCHAR(45) NULL,
  PRIMARY KEY (`idProduto`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dio_ecommerce`.`Pagamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dio_ecommerce`.`Pagamento` ;

CREATE TABLE IF NOT EXISTS `dio_ecommerce`.`Pagamento` (
  `idPagamento` INT NOT NULL,
  `pagamento` VARCHAR(45) NULL,
  PRIMARY KEY (`idPagamento`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dio_ecommerce`.`Pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dio_ecommerce`.`Pedido` ;

CREATE TABLE IF NOT EXISTS `dio_ecommerce`.`Pedido` (
  `idPedido` INT NOT NULL,
  `status` VARCHAR(45) NULL,
  `descricao` VARCHAR(45) NULL,
  `Cliente_idCliente` INT NOT NULL,
  `frete` FLOAT NULL,
  `Pagamento_idPagamento` INT NOT NULL,
  PRIMARY KEY (`idPedido`, `Cliente_idCliente`, `Pagamento_idPagamento`),
  CONSTRAINT `fk_Pedido_Cliente1`
    FOREIGN KEY (`Cliente_idCliente`)
    REFERENCES `dio_ecommerce`.`Cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pedido_Pagamento1`
    FOREIGN KEY (`Pagamento_idPagamento`)
    REFERENCES `dio_ecommerce`.`Pagamento` (`idPagamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Pedido_Cliente1_idx` ON `dio_ecommerce`.`Pedido` (`Cliente_idCliente` ASC) VISIBLE;

CREATE INDEX `fk_Pedido_Pagamento1_idx` ON `dio_ecommerce`.`Pedido` (`Pagamento_idPagamento` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `dio_ecommerce`.`Estoque`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dio_ecommerce`.`Estoque` ;

CREATE TABLE IF NOT EXISTS `dio_ecommerce`.`Estoque` (
  `idEstoque` INT NOT NULL,
  `local` VARCHAR(45) NULL,
  PRIMARY KEY (`idEstoque`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dio_ecommerce`.`Fornecedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dio_ecommerce`.`Fornecedor` ;

CREATE TABLE IF NOT EXISTS `dio_ecommerce`.`Fornecedor` (
  `idFornecedor` INT NOT NULL,
  `razao_social` VARCHAR(45) NULL,
  `CNPJ` VARCHAR(45) NULL,
  PRIMARY KEY (`idFornecedor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dio_ecommerce`.`Disponibilidade_produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dio_ecommerce`.`Disponibilidade_Produto` ;

CREATE TABLE IF NOT EXISTS `dio_ecommerce`.`Disponibilidade_Produto` (
  `Fornecedor_idFornecedor` INT NOT NULL,
  `Produto_idProduto` INT NOT NULL,
  PRIMARY KEY (`Fornecedor_idFornecedor`, `Produto_idProduto`),
  CONSTRAINT `fk_Fornecedor_has_Produto_Fornecedor`
    FOREIGN KEY (`Fornecedor_idFornecedor`)
    REFERENCES `dio_ecommerce`.`Fornecedor` (`idFornecedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Fornecedor_has_Produto_Produto1`
    FOREIGN KEY (`Produto_idProduto`)
    REFERENCES `dio_ecommerce`.`Produto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Fornecedor_has_Produto_Produto1_idx` ON `dio_ecommerce`.`Disponibilidade_Produto` (`Produto_idProduto` ASC) VISIBLE;

CREATE INDEX `fk_Fornecedor_has_Produto_Fornecedor_idx` ON `dio_ecommerce`.`Disponibilidade_Produto` (`Fornecedor_idFornecedor` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `dio_ecommerce`.`Produto_has_Estoque`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dio_ecommerce`.`Produto_has_Estoque` ;

CREATE TABLE IF NOT EXISTS `dio_ecommerce`.`Produto_has_Estoque` (
  `Produto_idProduto` INT NOT NULL,
  `Estoque_idEstoque` INT NOT NULL,
  `quantidade` INT NULL,
  PRIMARY KEY (`Produto_idProduto`, `Estoque_idEstoque`),
  CONSTRAINT `fk_Produto_has_Estoque_Produto1`
    FOREIGN KEY (`Produto_idProduto`)
    REFERENCES `dio_ecommerce`.`Produto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Produto_has_Estoque_Estoque1`
    FOREIGN KEY (`Estoque_idEstoque`)
    REFERENCES `dio_ecommerce`.`Estoque` (`idEstoque`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Produto_has_Estoque_Estoque1_idx` ON `dio_ecommerce`.`Produto_has_Estoque` (`Estoque_idEstoque` ASC) VISIBLE;

CREATE INDEX `fk_Produto_has_Estoque_Produto1_idx` ON `dio_ecommerce`.`Produto_has_Estoque` (`Produto_idProduto` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `dio_ecommerce`.`Produto_Pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dio_ecommerce`.`Produto_Pedido` ;

CREATE TABLE IF NOT EXISTS `dio_ecommerce`.`Produto_Pedido` (
  `Produto_idProduto` INT NOT NULL,
  `Pedido_idPedido` INT NOT NULL,
  `quantidade` VARCHAR(45) NULL,
  PRIMARY KEY (`Produto_idProduto`, `Pedido_idPedido`),
  CONSTRAINT `fk_Produto_has_Pedido_Produto1`
    FOREIGN KEY (`Produto_idProduto`)
    REFERENCES `dio_ecommerce`.`Produto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Produto_has_Pedido_Pedido1`
    FOREIGN KEY (`Pedido_idPedido`)
    REFERENCES `dio_ecommerce`.`Pedido` (`idPedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Produto_has_Pedido_Pedido1_idx` ON `dio_ecommerce`.`Produto_Pedido` (`Pedido_idPedido` ASC) VISIBLE;

CREATE INDEX `fk_Produto_has_Pedido_Produto1_idx` ON `dio_ecommerce`.`Produto_Pedido` (`Produto_idProduto` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `dio_ecommerce`.`Revendedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dio_ecommerce`.`Revendedor` ;

CREATE TABLE IF NOT EXISTS `dio_ecommerce`.`Revendedor` (
  `idRevendedor` INT NOT NULL,
  `razao_social` VARCHAR(45) NULL,
  `local` VARCHAR(45) NULL,
  PRIMARY KEY (`idRevendedor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dio_ecommerce`.`Produtos_Revendedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dio_ecommerce`.`Produtos_Revendedor` ;

CREATE TABLE IF NOT EXISTS `dio_ecommerce`.`Produtos_Revendedor` (
  `Produto_idProduto` INT NOT NULL,
  `Revendedor_idRevendedor` INT NOT NULL,
  `quantidade` INT NULL,
  PRIMARY KEY (`Produto_idProduto`, `Revendedor_idRevendedor`),
  CONSTRAINT `fk_Produto_has_Revendedor_Produto1`
    FOREIGN KEY (`Produto_idProduto`)
    REFERENCES `dio_ecommerce`.`Produto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Produto_has_Revendedor_Revendedor1`
    FOREIGN KEY (`Revendedor_idRevendedor`)
    REFERENCES `dio_ecommerce`.`Revendedor` (`idRevendedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Produto_has_Revendedor_Revendedor1_idx` ON `dio_ecommerce`.`Produtos_Revendedor` (`Revendedor_idRevendedor` ASC) VISIBLE;

CREATE INDEX `fk_Produto_has_Revendedor_Produto1_idx` ON `dio_ecommerce`.`Produtos_Revendedor` (`Produto_idProduto` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `dio_ecommerce`.`Entrega`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dio_ecommerce`.`Entrega` ;

CREATE TABLE IF NOT EXISTS `dio_ecommerce`.`Entrega` (
  `idEntrega` INT NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  `cod_rastreio` VARCHAR(45) NOT NULL,
  `Pedido_idPedido` INT NOT NULL,
  PRIMARY KEY (`idEntrega`, `Pedido_idPedido`),
  CONSTRAINT `fk_Entrega_Pedido1`
    FOREIGN KEY (`Pedido_idPedido`)
    REFERENCES `dio_ecommerce`.`Pedido` (`idPedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Entrega_Pedido1_idx` ON `dio_ecommerce`.`Entrega` (`Pedido_idPedido` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
